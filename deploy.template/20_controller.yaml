#@ load("funcs.lib.yml", "name", "namespace", "timezone", "controller", "initimage", "etcdendpoint", "controllerimage", "controllerhostport", "set_priority_class")
apiVersion: v1
kind: ConfigMap
metadata:
  name: #@ controller()
  namespace: #@ namespace()
data:
  INIT_DEBUG: 'false'
  SERVER_IMG: quay.io/piraeusdatastore/piraeus-server:v1.6.1
  ETCD_ENDPOINTS: #@ etcdendpoint()
  LS_CONTROLLERS: #@ controllerhostport()
---
apiVersion: v1
kind: Service
metadata:
  name: #@ controller()
  namespace: #@ namespace()
  labels:
    app.kubernetes.io/name: #@ name()
    app.kubernetes.io/component: #@ controller()
spec:
  type: ClusterIP
  ports:
  - port: 3370
    name: rest-api
    targetPort: 3370
  selector:
    app.kubernetes.io/name: #@ name()
    app.kubernetes.io/component: #@ controller()
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: #@ controller()
  namespace: #@ namespace()
  labels:
    app.kubernetes.io/name: #@ name()
    app.kubernetes.io/component: #@ controller()
spec:
  serviceName: #@ controller()
  updateStrategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: #@ name()
      app.kubernetes.io/component: #@ controller()
  template:
    metadata:
      labels:
        app.kubernetes.io/name: #@ name()
        app.kubernetes.io/component: #@ controller()
    spec:
      #@ if set_priority_class():
      priorityClassName: system-cluster-critical
      #@ end
      restartPolicy: Always
      hostNetwork: true
      hostPID: true
      hostIPC: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: oci-monitor
        image: daocloud.io/piraeus/piraeus-oci:v0.1
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        resources:
          #! requests:
          #!   cpu: 500m
          #!   memory: 500Mi
          limits:
            cpu: 200m
            memory: 200Mi
        ports:
        - name: rest-api
          containerPort: 3370
          hostPort: 3370
        - name: plain
          containerPort: 3376
          hostPort: 3376
        - name: ssl
          containerPort: 3377
          hostPort: 3377
        envFrom:
            - configMapRef:
                name: #@ controller()
        env:    
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        args: [ controller ]
        readinessProbe:
          successThreshold: 3
          failureThreshold: 3
          httpGet:
            port: 3370
          periodSeconds: 5
        volumeMounts:
        - name: timezone
          mountPath: /etc/localtime
        - name: dockersock
          mountPath: /var/run/docker.sock
        - name: systemd
          mountPath: /etc/systemd/system
        - name: etc-linstor
          mountPath: /etc/linstor
        - name: #@ "opt-" + name()
          mountPath: #@ "/opt/" + name()
        - name: #@ "var-lib-" + name()
          mountPath: #@ "/var/lib/" + name()     
      volumes:
      - name: timezone
        hostPath:
          path: #@ timezone()
      - name: #@ "opt-" + name()
        hostPath:
          path: #@ "/opt/" + name()
      - name: #@ "var-lib-" + name()
        hostPath:
          path: #@ "/var/lib/" + name()
      - name: etc-linstor
        hostPath:
          path: /etc/linstor
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      - name: systemd
        hostPath:
          path: /etc/systemd/system
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: DoesNotExist
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - key: CriticalAddonsOnly
        operator: Exists
      #! imagePullSecrets:
      #! - name: piraeus-regcred