apiVersion: v1
kind: ConfigMap
metadata:
  name: piraeus-controller
  namespace: piraeus-system
data:
  INIT_DEBUG: "false"
  SERVER_IMG: quay.io/piraeusdatastore/piraeus-server:v1.4.2
  ETCD_ENDPOINTS: piraeus-etcd.piraeus-system.svc.cluster.local:2379
  LS_CONTROLLERS: piraeus-controller.piraeus-system.svc.cluster.local:3370
---
apiVersion: v1
kind: Service
metadata:
  name: piraeus-controller
  namespace: piraeus-system
  labels:
    app.kubernetes.io/name: piraeus
    app.kubernetes.io/component: piraeus-controller
spec:
  type: ClusterIP
  ports:
  - port: 3370
    name: rest-api
    targetPort: 3370
  selector:
    app.kubernetes.io/name: piraeus
    app.kubernetes.io/component: piraeus-controller
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: piraeus-controller
  namespace: piraeus-system
  labels:
    app.kubernetes.io/name: piraeus
    app.kubernetes.io/component: piraeus-controller
spec:
  serviceName: piraeus-controller
  updateStrategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: piraeus
      app.kubernetes.io/component: piraeus-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: piraeus
        app.kubernetes.io/component: piraeus-controller
    spec:
      restartPolicy: Always
      hostNetwork: true
      hostPID: true
      hostIPC: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: oci-monitor
        image: daocloud.io/piraeus/piraeus-oci:v0.1
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
        ports:
        - name: rest-api
          containerPort: 3370
          hostPort: 3370
        - name: plain
          containerPort: 3376
          hostPort: 3376
        - name: ssl
          containerPort: 3377
          hostPort: 3377
        envFrom:
        - configMapRef:
            name: piraeus-controller
        env:
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        args:
        - controller
        readinessProbe:
          successThreshold: 3
          failureThreshold: 3
          httpGet:
            port: 3370
          periodSeconds: 5
        volumeMounts:
        - name: timezone
          mountPath: /etc/localtime
        - name: dockersock
          mountPath: /var/run/docker.sock
        - name: systemd
          mountPath: /etc/systemd/system
        - name: etc-linstor
          mountPath: /etc/linstor
        - name: opt-piraeus
          mountPath: /opt/piraeus
        - name: var-lib-piraeus
          mountPath: /var/lib/piraeus
      volumes:
      - name: timezone
        hostPath:
          path: /usr/share/zoneinfo/Etc/UTC
      - name: opt-piraeus
        hostPath:
          path: /opt/piraeus
      - name: var-lib-piraeus
        hostPath:
          path: /var/lib/piraeus
      - name: etc-linstor
        hostPath:
          path: /etc/linstor
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      - name: systemd
        hostPath:
          path: /etc/systemd/system
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: DoesNotExist
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - key: CriticalAddonsOnly
        operator: Exists
